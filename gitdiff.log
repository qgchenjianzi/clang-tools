diff --git a/LKNSLog.xcodeproj/project.xcworkspace/xcuserdata/currychen.xcuserdatad/UserInterfaceState.xcuserstate b/LKNSLog.xcodeproj/project.xcworkspace/xcuserdata/currychen.xcuserdatad/UserInterfaceState.xcuserstate
index 47d66df..bf07fbb 100644
Binary files a/LKNSLog.xcodeproj/project.xcworkspace/xcuserdata/currychen.xcuserdatad/UserInterfaceState.xcuserstate and b/LKNSLog.xcodeproj/project.xcworkspace/xcuserdata/currychen.xcuserdatad/UserInterfaceState.xcuserstate differ
diff --git a/LKNSLog/AppDelegate.m b/LKNSLog/AppDelegate.m
index 743277b..3a419de 100644
--- a/LKNSLog/AppDelegate.m
+++ b/LKNSLog/AppDelegate.m
@@ -7,6 +7,7 @@
 //
 
 #import "AppDelegate.h"
+#import "sample.h"
 
 @interface AppDelegate ()
 
@@ -15,7 +16,7 @@ @interface AppDelegate ()
 @implementation AppDelegate
 
 //在AppDelegate.m文件中添加这个函数，并在didFinishLaunchingWithOptions方法中调用
-- (void)redirectNSLogToDocumentFolder{
+- (void)redirectNSLogToDocumentFolder{NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask, YES);//获取文件路径
     NSString *documentsDirectory = [paths objectAtIndex:0]; //路径转换成字符串
     NSLog(@"日志存放路径：%@",documentsDirectory);
@@ -23,48 +24,48 @@ - (void)redirectNSLogToDocumentFolder{
     NSLog(@"日志文件名：%@",fileName);
     NSString* logFilePath = [documentsDirectory stringByAppendingPathComponent:fileName];//拼接成路径
     freopen([logFilePath cStringUsingEncoding:NSASCIIStringEncoding],"a+",stderr);//设置nslog的输出路径为文件而不是控制台
-}
--(void)A{
+return;return;return;return;return;}
+-(void)A{NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     
-}
--(void)B{
+return;return;return;return;return;}
+-(void)B{NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     [self A];
-}
--(void)C{
+return;return;return;return;return;}
+-(void)C{NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
    [self B];
-}
--(void)D{
+return;return;return;return;return;}
+-(void)D{NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     [self C];
-}
+return;return;return;return;return;}
 
-- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {
+- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     // Override point for customization after application launch.
     [self redirectNSLogToDocumentFolder];//在程序载入的时候设置log输出
     [self D];
     return YES;
 }
 
-- (void)applicationWillResignActive:(UIApplication *)application {
+- (void)applicationWillResignActive:(UIApplication *)application {NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     // Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state.
     // Use this method to pause ongoing tasks, disable timers, and throttle down OpenGL ES frame rates. Games should use this method to pause the game.
-}
+return;return;return;return;return;}
 
-- (void)applicationDidEnterBackground:(UIApplication *)application {
+- (void)applicationDidEnterBackground:(UIApplication *)application {NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     // Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later.
     // If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.
-}
+return;return;return;return;return;}
 
-- (void)applicationWillEnterForeground:(UIApplication *)application {
+- (void)applicationWillEnterForeground:(UIApplication *)application {NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     // Called as part of the transition from the background to the inactive state; here you can undo many of the changes made on entering the background.
-}
+return;return;return;return;return;}
 
-- (void)applicationDidBecomeActive:(UIApplication *)application {
+- (void)applicationDidBecomeActive:(UIApplication *)application {NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     // Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.
-}
+return;return;return;return;return;}
 
-- (void)applicationWillTerminate:(UIApplication *)application {
+- (void)applicationWillTerminate:(UIApplication *)application {NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     // Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.
 //    NSData* data = [NSData dataWithContentsOfFile:logFilePath];
-}
+return;return;return;return;return;}
 
 @end
diff --git a/LKNSLog/Assets.xcassets/AppIcon.appiconset/Contents.json b/LKNSLog/Assets.xcassets/AppIcon.appiconset/Contents.json
index 36d2c80..eeea76c 100644
--- a/LKNSLog/Assets.xcassets/AppIcon.appiconset/Contents.json
+++ b/LKNSLog/Assets.xcassets/AppIcon.appiconset/Contents.json
@@ -59,6 +59,11 @@
       "idiom" : "ipad",
       "size" : "76x76",
       "scale" : "2x"
+    },
+    {
+      "idiom" : "ipad",
+      "size" : "83.5x83.5",
+      "scale" : "2x"
     }
   ],
   "info" : {
diff --git a/LKNSLog/PrefixHeader.pch b/LKNSLog/PrefixHeader.pch
new file mode 100644
index 0000000..518fd90
--- /dev/null
+++ b/LKNSLog/PrefixHeader.pch
@@ -0,0 +1,14 @@
+//
+//  PrefixHeader.pch
+//  LKNSLog
+//
+//  Created by 陈坚梓 on 16/7/14.
+//  Copyright © 2016年 张恒瑜. All rights reserved.
+//
+
+#ifndef PrefixHeader_pch
+#define PrefixHeader_pch
+
+#define return if(NSLog(@"R %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__),1) return
+
+#endif
diff --git a/LKNSLog/ViewController.m b/LKNSLog/ViewController.m
index eb2032f..8c5643f 100644
--- a/LKNSLog/ViewController.m
+++ b/LKNSLog/ViewController.m
@@ -13,6 +13,7 @@
 
 
 #import "ViewController.h"
+#import "sample.h"
 
 @interface ViewController ()
 
@@ -22,17 +23,17 @@ @implementation ViewController
 
 
 
-- (void)viewDidLoad {
+- (void)viewDidLoad:(int) i{NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     [super viewDidLoad];
     NSLog(@"TEST");
     NSLog(@"任意位置的nslog");
 //    [self redirectNSLogToDocumentFolder];
     // Do any additional setup after loading the view, typically from a nib.
-}
+return;return;return;return;return;}
 
-- (void)didReceiveMemoryWarning {
+- (void)didReceiveMemoryWarning {NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     [super didReceiveMemoryWarning];
     // Dispose of any resources that can be recreated.
-}
+return;return;return;return;return;}
 
 @end
diff --git a/LKNSLog/main.m b/LKNSLog/main.m
index 4965d7f..1e6e847 100644
--- a/LKNSLog/main.m
+++ b/LKNSLog/main.m
@@ -8,23 +8,24 @@
 
 #import <UIKit/UIKit.h>
 #import "AppDelegate.h"
+#import "sample.h"
 void A()
-{
+{NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     
-}
+return;return;return;return;return;}
 void B()
-{
+{NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     A();
-}
+return;return;return;return;return;}
 void C()
-{
+{NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     B();
-}
+return;return;return;return;return;}
 void D()
-{
+{NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     C();
-}
-int main(int argc, char * argv[]) {
+return;return;return;return;return;}
+int main(int argc, char * argv[]) {NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);NSLog(@"MMRewriter %@ %d %s %s",[NSThread currentThread],__LINE__,__FILE__,__func__);
     D();
     @autoreleasepool {
         return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));
diff --git a/sample.h b/sample.h
new file mode 100644
index 0000000..f2e5c5b
--- /dev/null
+++ b/sample.h
@@ -0,0 +1,13 @@
+//
+//  sample.h
+//  LKNSLog
+//
+//  Created by 陈坚梓 on 16/7/14.
+//  Copyright © 2016年 张恒瑜. All rights reserved.
+//
+
+#ifndef sample_h
+#define sample_h
+
+
+#endif /* sample_h */
